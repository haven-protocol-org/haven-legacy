tagged-build: &tagged-build
  filters:
    tags:
      only: /.*/
    branches:
      ignore: /.*/

version: 2.1
jobs:
  build:
    docker:
      - image: ubuntu:16.04
    environment:
      BOOST_VERSION: '1_66_0'
      BOOST_VERSION_DOT: '1.66.0'
      BOOST_HASH: '5721818253e6a0989583192f96782c4a98eb6204965316df9f5ad75819225ca9'
      OPENSSL_VERSION: '1.0.2n'
      OPENSSL_HASH: '370babb75f278c39e0c50e8c4e7493bc0f18db6867478341a832a982fd15a8fe'
      ZMQ_VERSION: 'v4.2.3'
      ZMQ_HASH: '3226b8ebddd9c6c738ba42986822c26418a49afb'
      CPPZMQ_HASH: '6aa3ab686e916cb0e62df7fa7d12e0b13ae9fae6'
      READLINE_VERSION: '7.0'
      READLINE_HASH: '750d437185286f40a369e1e4f4764eda932b9459b5ec9a731628393dd3d32334'
      SODIUM_VERSION: '1.0.16'
      SODIUM_HASH: '675149b9b8b66ff44152553fb3ebf9858128363d'

    steps:
      - checkout

      - run:
          name: Install Build Deps
          command: |
            apt-get update
            apt-get --no-install-recommends --yes install ca-certificates cmake g++ make pkg-config graphviz doxygen git curl libtool-bin autoconf automake

      - run:
          name: Build and Install Boost
          command: |
            cd /usr/local
            curl -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2
            echo "${BOOST_HASH} boost_${BOOST_VERSION}.tar.bz2" | sha256sum -c
            tar -xvf boost_${BOOST_VERSION}.tar.bz2
            cd boost_${BOOST_VERSION}
            ./bootstrap.sh
            ./b2 --build-type=minimal link=static runtime-link=static --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex --with-serialization --with-system --with-thread --with-locale threading=multi threadapi=pthread cflags="-fPIC" cxxflags="-fPIC" stage

      - run:
          name: Build and Install OpenSSL
          command: |
            cd /usr/local
            curl -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
            echo "${OPENSSL_HASH} openssl-${OPENSSL_VERSION}.tar.gz" | sha256sum -c
            tar -xzf openssl-${OPENSSL_VERSION}.tar.gz
            cd openssl-${OPENSSL_VERSION}
            ./Configure linux-x86_64 no-shared --static -fPIC
            make build_crypto build_ssl
            make install

      - run:
          name: Build and Install ZMQ
          command: |
            cd /usr/local
            git clone https://github.com/zeromq/libzmq.git -b ${ZMQ_VERSION}
            cd libzmq
            test `git rev-parse HEAD` = ${ZMQ_HASH} || exit 1
            ./autogen.sh
            CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --enable-static --disable-shared
            make
            make install
            ldconfig

      - run:
          name: Install CPP ZMP Header
          command: |
            cd /usr/local
            git clone https://github.com/zeromq/cppzmq.git -b ${ZMQ_VERSION}
            cd cppzmq
            test `git rev-parse HEAD` = ${CPPZMQ_HASH} || exit 1
            mv *.hpp /usr/local/include

      - run:
          name: Build and Install Readline
          command: |
            cd /usr/local
            curl -s -O https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz
            echo "${READLINE_HASH} readline-${READLINE_VERSION}.tar.gz" | sha256sum -c
            tar -xzf readline-${READLINE_VERSION}.tar.gz
            cd readline-${READLINE_VERSION}
            CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure
            make
            make install

      - run:
          name: Build and Install Sodium
          command: |
            cd /usr/local
            git clone https://github.com/jedisct1/libsodium.git -b ${SODIUM_VERSION}
            cd libsodium
            test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1
            ./autogen.sh
            CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure
            make
            make check
            make install

      - run:
          name: Build and Package Haven
          command: |
            export OPENSSL_ROOT_DIR=/usr/local/openssl-${OPENSSL_VERSION}
            export BOOST_ROOT=/usr/local/boost_${BOOST_VERSION}
            make release-static
            tar -czvf haven-linux-x64-$(git describe --tags)-cli.tar.gz build/release/bin
            cp haven-linux-x64-$(git describe --tags)-cli.tar.gz build/release/bin

      - store_artifacts:
         path: build/release/bin/

workflows:
  version: 2
  build_cli_from_branch:
    jobs:
      - build
  build_cli_from_tag:
    jobs:
      - build: *tagged-build
